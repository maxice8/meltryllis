#!/bin/sh
#
# Show diff of the contents of a package (files) or the
# changes in providers and dependencies.
#
# Must be called from where the APKBUILD is located
#

NORMAL="\033[1;0m"
RED="\033[1;31m"
GREEN="\033[1;32m"

msg() {
	local _prompt="$GREEN>>>${NORMAL}"
	printf "$_prompt %s\n" "$1"
}

die() {
	local _prompt="${RED}>>> ERROR:${NORMAL}"
	printf "$_prompt %s\n" "$1"
	exit 1
}

colordiff() {
	# GNU SED specific
	sed 's/^-/\x1b[31m-/;s/^+/\x1b[32m+/;s/$/\x1b[0m/'
}

# shellcheck disable=SC1091
. ./APKBUILD || die "failed to source repo for package"

tmpdir=$(mktemp -d -t checkpkg-script.XXXXXX)
# shellcheck disable=2064
trap "rm -rf '$tmpdir'" INT EXIT
cd "$tmpdir" || die "failed to create temp dir"

# generate a temp repositories file with only the http(s) repos
grep -E "^https?:" /etc/apk/repositories > "$tmpdir"/remote-repositories
grep -E -v "^https?:" /etc/apk/repositories > "$tmpdir"/local-repositories

_carch="$(abuild -A)"

# We need ncurses for this, lets clean up the terminal
reset 

# Fetch all the APKs before doing the operations
for i in $pkgname $subpackages; do

	(
	# Strip the separators and their contents from declaration of subpackages
	# so: foo-doc:doc:noarch becomes foo-doc
	_pkgname="${i%%:*}"

	# shellcheck disable=SC2154
	pkg="${_pkgname}-$pkgver-r$pkgrel"
	pkgfile=${pkg}.apk

	# We need to declare this here so the changes inside the loop change it
	oldapkpath='' newapkpath=''

	# Check if our package and oldpkg matches
	oldpkg="$(apk fetch --repositories-file "$tmpdir"/remote-repositories --simulate "$_pkgname" 2>/dev/null | grep Downloading | sed 's/^Downloading //')"
	if [ "${oldpkg}" = "${pkg}" ]; then
		die "the built package ($pkg) is the same as in-repo"
	fi

	for repo in $(cat "$tmpdir"/local-repositories); do
		if [ -f "$repo"/"$_carch"/"$pkgfile" ]; then
			newapkpath="$repo"/"$_carch"/"$pkgfile"
			break
		fi
	done
	[ -f "$newapkpath" ] || die "can't find $pkgfile, maybe package wasn't built"

	for candidate in /var/cache/apk/"$oldpkg".*.apk; do
		if ! [ -f "$candidate" ]; then
			continue
		fi
		printok "Found cached $oldpkg"
		oldapkpath="$candidate"
	done

	if ! [ -f "$oldapkpath" ]; then
		# Fetch the package for all runs
		apk fetch \
			--repositories-file "$tmpdir"/remote-repositories \
			--output "$tmpdir" \
			"$_pkgname" \
			>/dev/null 2>&1 &&
		printok "Fetched $oldpkg"
		oldapkpath="$PWD"/"$oldpkg".apk
	fi

	echo "$oldapkpath" > "$tmpdir"/old-"$_pkgname"
	echo "$newapkpath" > "$tmpdir"/new-"$_pkgname"
	) &
done
wait

# We need ncurses for this
reset

for i in $pkgname $subpackages; do

	# Strip the separators and their contents from declaration of subpackages
	# so: foo-doc:doc:noarch becomes foo-doc
	_pkgname="${i%%:*}"

	oldapk="$(cat "$tmpdir"/old-"$_pkgname")"
	newapk="$(cat "$tmpdir"/new-"$_pkgname")"

	[ -e "$oldapk" ] || oldapk=""
	[ -f "$newapk" ] || continue

	for attr in "$@"; do
		case "$attr" in
			files)
				[ -z "$oldapk" ] || \
				tar -z --list --file="$oldapk" 2>/dev/null \
					| grep -E -v '(^\.SIGN\.|^\.PKGINFO)' \
					| sort > "$tmpdir"/difflist-"$_pkgname"-old-"$attr"

				tar -z --list --file="$newapk" \
					| grep -E -v '(^\.SIGN\.|^\.PKGINFO)' \
					| sort > "$tmpdir"/difflist-"$_pkgname"-new-"$attr"
				;;
			* )
				[ -z "$oldapk" ] || \
				tar -z --extract --to-stdout --file="$oldapk" '.PKGINFO' 2>/dev/null \
					| grep "^$attr =" \
					| sed "s/^$attr = //" \
					| sort > "$tmpdir"/difflist-"$_pkgname"-old-"$attr"

				tar -z --extract --to-stdout --file="$newapk" '.PKGINFO' \
					| grep "^$attr = " \
					| sed "s/^$attr = //" \
					| sort > "$tmpdir"/difflist-"$_pkgname"-new-"$attr"

				# When the user asks for size, we want to give them a human-readable size
				if [ "$attr" = size ]; then
					[ -z "$oldapk" ] || \
					human "$tmpdir"/difflist-"$_pkgname"-old-"$attr"
					if [ -s "$tmpdir"/difflist-"$_pkgname"-new-"$attr" ]; then
						human "$tmpdir"/difflist-"$_pkgname"-new-"$attr"
					fi
				fi

				;;
			esac
		if ! [ -f "$tmpdir"/difflist-"$_pkgname"-old-"$attr" ]; then
			touch "$tmpdir"/difflist-"$_pkgname"-old-"$attr"
		fi
		pkg="${newapk%.apk}"
		pkg="${pkg##*/}"
		oldpkg="${oldapk%.apk}"
		oldpkg="${oldpkg##*/}"
		msg "pkg=$pkg$(test -n "$oldapk" && echo " oldpkg=$oldpkg") prop=$attr:"
		diff \
			--color=always \
			--unchanged-line-format='' \
			--old-line-format="- %L" \
			--new-line-format="+ %L" \
			"$tmpdir"/difflist-"$_pkgname"-old-$attr \
			"$tmpdir"/difflist-"$_pkgname"-new-$attr | colordiff
	done
done | less -r
