#!/bin/sh
#
# Show diff of the contents of a package (files) or the
# changes in providers and dependencies.
#
# Must be called from where the APKBUILD is located
#

NORMAL="\033[1;0m"
RED="\033[1;31m"
GREEN="\033[1;32m"

msg() {
	_prompt="$GREEN>>>${NORMAL}"
	printf "$_prompt %s\n" "$1"
}

die() {
	_prompt="${RED}>>> ERROR:${NORMAL}"
	printf "$_prompt %s\n" "$1" >&2
	exit 1
}

colordiff() {
	# GNU SED specific
	sed 's/^-/\x1b[31m-/;s/^+/\x1b[32m+/;s/$/\x1b[0m/'
}

# shellcheck disable=SC1091
. ./APKBUILD || die "failed to source repo for package"

tmpdir=$(mktemp -d -t checkpkg-script.XXXXXX)
# shellcheck disable=2064
trap "rm -rf '$tmpdir'" INT EXIT
cd "$tmpdir" || die "failed to create temp dir"

# generate a temp repositories file with only the http(s) repos
grep -E "^https?:" /etc/apk/repositories > "$tmpdir"/remote-repositories
grep -E -v "^https?:" /etc/apk/repositories > "$tmpdir"/local-repositories

_carch="$(abuild -A)"

for i in $pkgname $subpackages; do
	_pkgname="${i%%:*}"
	# shellcheck disable=SC2154
	pkg="${_pkgname}-$pkgver-r$pkgrel"
	pkgfile=${pkg}.apk
	filepath=

	# Check if our package and oldpkg matches
	oldpkg="$(apk fetch --repositories-file "$tmpdir"/remote-repositories --simulate "$_pkgname" 2>/dev/null | grep Downloading | sed 's/^Downloading //')"
	if [ "${oldpkg}" = "${pkg}" ]; then
		die "the built package ($pkg) is the same as in-repo"
	fi

	for repo in $(cat "$tmpdir"/local-repositories); do
		if [ -f "$repo"/"$_carch"/"$pkgfile" ]; then
			filepath="$repo"/"$_carch"/"$pkgfile"
			break
		fi
	done
	[ -f "$filepath" ] || die "can't find $pkgfile, maybe package wasn't built"

	# Fetch the package for all runs
	apk fetch \
		--repositories-file "$tmpdir"/remote-repositories \
		--output "$tmpdir" \
		"$_pkgname" \
		>/dev/null 2>&1

	apkfile="$(find "$tmpdir" -iname '*.apk')"

	# The user wants us to diff files
	for attr in "$@"; do
		case "$attr" in
			files)
				[ -z "$apkfile" ] || \
				tar -zt --file="$apkfile" 2>/dev/null \
					| grep -E -v '(^\.SIGN\.|^\.PKGINFO)' \
					| sort > "$tmpdir"/difflist-"$_pkgname"-old-"$attr"

				tar -zt --file="$filepath" \
					| grep -E -v '(^\.SIGN\.|^\.PKGINFO)' \
					| sort > "$tmpdir"/difflist-"$_pkgname"-new-"$attr"
				;;
			* )
				[ -z "$apkfile" ] || \
				tar -zx --to-stdout --file="$apkfile" '.PKGINFO' 2>/dev/null \
					| grep "^$attr =" \
					| sed "s/^$attr = //" \
					| sort > "$tmpdir"/difflist-"$_pkgname"-old-"$attr"

				tar -zx --to-stdout --file="$filepath" '.PKGINFO' \
					| grep "^$attr = " \
					| sed "s/^$attr = //" \
					| sort > "$tmpdir"/difflist-"$_pkgname"-new-"$attr"

				# When the user asks for size, we want to give them a human-readable size
				if [ "$attr" = size ]; then
					[ -z "$apkfile" ] || \
					human "$tmpdir"/difflist-"$_pkgname"-old-"$attr"
					if [ -s "$tmpdir"/difflist-"$_pkgname"-new-"$attr" ]; then
						human "$tmpdir"/difflist-"$_pkgname"-new-"$attr"
					fi
				fi

				;;
			esac
		if ! [ -f "$tmpdir"/difflist-"$_pkgname"-old-"$attr" ]; then
			touch "$tmpdir"/difflist-"$_pkgname"-old-"$attr"
		fi
		msg "pkg=$pkg$(test -n "$oldpkg" && echo " oldpkg=$oldpkg") prop=$attr:"
		diff \
			--color=always \
			--unchanged-line-format='' \
			--old-line-format="- %L" \
			--new-line-format="+ %L" \
			"$tmpdir"/difflist-"$_pkgname"-old-$attr \
			"$tmpdir"/difflist-"$_pkgname"-new-$attr | colordiff
		shift
	done
done

