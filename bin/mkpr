#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
# mkpr [BRANCH] ... - mkpr create a pull request
[ "$EDIT" ] && EDIT="--edit" || EDIT="--no-edit"

while [ $# -gt 0 ]
do
	if [ "$1" = "-r" ]
	then
		REVIEW="-r $2"
		shift
	elif [ "$1" = "-a" ]
	then
		ASSIGN="-a $2"
		shift
	elif [ "$1" = "-l" ]
	then
		LABEL="-l $2"
		shift
	elif [ "$1" = "-e" ]
	then
		EDIT="--edit"
	elif [ "$1" = "-m" ]
	then
		MSG="$2"
		shift
	elif [ "$1" = "-d" ]
	then
		DRAFT="--draft"
	elif [ "$1" = "-b" ]
	then
		BASE="--base $2"
		_REALBASE="$2" # This is the base branch we are pushing to, like 3.10-stable
		shift
	else
		args="$args $1"
	fi
	shift
done

[ -z "$args" ] && args="$(git rev-parse --abbrev-ref HEAD)"

selectcommit() {
	# If we are pushing against a non-default base then prefix it on the commit msg
	[ -n "$_REALBASE" ] && printf "%s " "[$(alpine-stable-prefix "$_REALBASE")]"
	git show -s --format=%B $(git log upstream/${_REALBASE:-master}.."$1" --pretty='%h %s' |
							  fzy |
							  cut -d ' ' -f1)
}

lastcommit() {
	# If we are pushing against a non-default base then prefix it on the commit msg
	[ -n "$_REALBASE" ] && printf "%s " "[$(alpine-stable-prefix "$_REALBASE")]"
	git show -s --format=%B
}

pr() {
	if [ -z "$BASE" ] && [ -n "$(alpine-stable-prefix "$1")" ]; then
		_REALBASE="$(alpine-stable-prefix "$1")"-stable
		BASE="--base $_REALBASE"
	fi
	git rebase upstream/"${_REALBASE:-master}" >/dev/null 2>&1
	git push -uf origin "$1" >/dev/null 2>&1
	if [ "$(git rev-list --count upstream/"${_REALBASE:-master}"..$1)" -gt 1 ]
	then
		[ "$MSG" ] || MSG="$(selectcommit "$1")"
		hub pull-request -h "$1" $EDIT $ASSIGN $REVIEW $LABEL $BASE -m "$MSG"
	else
		hub pull-request -h "$1" $EDIT $ASSIGN $REVIEW $LABEL $BASE -m "$(lastcommit)"
	fi
}
for arg in $args
do
	pr "$arg"
done
