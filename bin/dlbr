#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
# dlbr BRANCH... - Delete local and remote branches matching name
delete_remote_branch() {
	if ! git push --quiet origin --delete $branch 2>/dev/null; then
		printerr "Failed to delete remote '$branch'"
		return 0
	else
		printok "Deleted remote '$branch'"
	fi
}

delete_local_branch() {
    [ "$1" ] || return 1
    branch="$1"

	if ! git rev-parse --quiet --verify "$branch" >/dev/null 2>&1; then
		return 0
	fi

	if [ $(git branch --show-current) == "$branch" ]; then
		#
		# Try to switch to the tracking branch
		# otherwise try to switch to the default branch
		#
		_full=$(tracking-branch $branch)

		if [ "$_full" == "$branch" ]; then
			#
			# We hit this in case we are deleting a branch with the same name
			# as the branch it tracks, like having origin/foo tracking upstream/foo
			# the user wants to delete origin/foo, so we can't switch to 'foo'
			#
			# In this case we default to 'master' for now, this will be solved
			# once we can detect which branch is default (master is overwhelmingly
			# the default right now)
			#
			env PRINTOK_QUIET=yes gbr master
		else
			env PRINTOK_QUIET=yes gbr $_full
		fi
	fi

	if ! git branch -D "$branch" >/dev/null 2>&1; then
		printerr "Failed to delete local '$branch'"
		return 1
	else
		printok "Deleted local '$branch'"
	fi
}

[ $# -lt 1 ] && exit 1
for branch; do
	[ -z "$DLBR_LOCAL" ] && delete_remote_branch $branch
	delete_local_branch $branch
done
