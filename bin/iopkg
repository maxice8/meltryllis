#!/bin/sh
#
# Show diff of the contents of a package (files) or the
# changes in providers and dependencies.
#
# Must be called from where the APKBUILD is located
#

NORMAL="\033[1;0m"
RED="\033[1;31m"
GREEN="\033[1;32m"

msg() {
	local _prompt="$GREEN>>>${NORMAL}"
	printf "$_prompt %s\n" "$1"
}

die() {
	local _prompt="${RED}>>> ERROR:${NORMAL}"
	printf "$_prompt %s\n" "$1"
	exit 1
}

# shellcheck disable=SC1091
. APKBUILD || die "failed to source repo for package"

tmpdir=$(mktemp -d -t checkpkg-script.XXXXXX)
# shellcheck disable=2064
trap "rm -rf '$tmpdir'" INT EXIT
cd "$tmpdir" || die "failed to create temp dir"

grep -E -v "^https?:" /etc/apk/repositories >"$tmpdir"/local-repositories

_carch="$(abuild -A)"

# We need ncurses for this, lets clean up the terminal
clear

# Create a package list that holds the name of the package
# and the name of every subpackage
pkglist="$pkgname"
for pkg in $subpackages; do
	pkglist="$pkglist ${pkg%%:*}"
done

for i in $pkglist; do
	(
		# shellcheck disable=SC2154
		pkg="$i-$pkgver-r$pkgrel"
		pkgfile=${pkg}.apk

		# Try to get our package from our locally built and return early so we don't
		# waste time trying to get a remote package
		for repo in $(cat "$tmpdir"/local-repositories); do
			if [ -f "$repo"/"$_carch"/"$pkgfile" ]; then
				echo "$repo"/"$_carch"/"$pkgfile" >"$tmpdir"/"$i"
				return 0
			fi
		done
	) &
done
wait

# We need ncurses for this
clear

for i in $pkglist; do
	if ! [ -f "$tmpdir"/"$i" ]; then
		continue
	fi

	apk="$(cat "$tmpdir"/"$i")"
	{
		msg "pkg=$i ver=$pkgver"
		tar -z --extract --to-stdout --file="$apk" '.PKGINFO' 2>/dev/null
	} | less -r
done
