#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
# appr MR-NUM - Close a Merge Request by number
HOST="$(get-endpoint gitlab)"

# If we have the SSH url on the 
if is_ssh "$HOST"; then
	HOST="$(ssh_to_https "$HOST")"
elif is_https "$HOST"; then
	HOST="$(printf "%s\\n" "$HOST" | sed 's|.git$||g')"
fi

# Get the host from the HOST variable and append the gitlab api
ENDPOINT="$(printf "%s\\n" "$HOST" | cut -d / -f -3)"/api/v4/projects

# Get the user and repo and convert to compliant encoding for gitlab URLs
ENDPOINT="$ENDPOINT"/"$(printf "%s\\n" "$HOST" | cut -d / -f 4- | sed  's|/|%2F|g')"

# JSON payload
BODY="{
	\"state_event\": \"close\"
}";

if [ -z "$1" ]; then
	exit 1
fi

mr="$1"

RETURN="$(curl -X PUT "$ENDPOINT"/merge_requests/"$mr" \
	--header "PRIVATE-TOKEN: $(secret-tool lookup Path a.o/gitlab/token/mkmr)" \
	--header "Content-Type: application/json" \
	--data "$BODY" --silent --output /dev/null --write-out "%{http_code}")"

if [ "$RETURN" -eq 200 ]; then
	echo "Closed #$mr"
else
	echo "Failed to close #$mr"
fi
