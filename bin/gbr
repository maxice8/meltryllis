#!/bin/sh
# Show git branches and switch to them
[ -e .git ] || exit 1
[ $# -lt 1 ] && exit 1

remote="$(guess-remote)"

[ -z "$remote" ] && exit 1

for spec; do
    branch="$(printf "%s" "$spec" | cut -d : -f1)"

    if printf "%s" "$spec" | grep -F -q ':'; then
        based="$(printf "%s" "$spec" | cut -d : -f2)"
    else
        based=""
    fi

	if git rev-parse --quiet --verify $branch >/dev/null 2>&1; then
		git switch --quiet $branch || \
			printerr "Failed to switch to '$branch'" && \
			printok "Switched to '$branch'"
    else    
        if [ -n "$based" ]; then
			git switch --quiet --force-create $branch $based || \
				printerr "Failed to switch to '$branch'" && \
				printok "Switched to newly created '$branch' based on '$based'"
		else
			_REALBASE="$(alpine-stable-prefix $branch)"
			if [ -n "$_REALBASE" ]; then
				git switch --quiet --force-create $branch $remote/$_REALBASE-stable || \
					printerr "Failed to switch to '$branch'" && \
					printok "Switched to newly created '$branch' based on '$_REALBASE-stable'"
			else
				git switch --quiet --force-create $branch $remote/master || \
					printerr "Failed to switch to '$branch'" && \
					printok "Switched to newly created '$branch' based on 'master'"
			fi
        fi
    fi
done
